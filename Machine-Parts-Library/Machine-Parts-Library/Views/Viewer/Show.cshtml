@{
    ViewData["Title"] = "Three.js GLB Demo";
    var base64 = ViewBag.ModelBase64 as string ?? "";
}

<h2>Three.js GLB Model from Generator</h2>

<div id="threejs-container" style="width: 800px; height: 600px; border: 1px solid #ccc;"></div>

<script src="https://cdn.jsdelivr.net/npm/three@0.130.1/build/three.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/three@0.130.1/examples/js/loaders/GLTFLoader.js"></script>

<script>
    const base64 = "@base64";

    const container = document.getElementById('threejs-container');

    const scene = new THREE.Scene();
    scene.background = new THREE.Color(0xf0f0f0);

    const camera = new THREE.PerspectiveCamera(
        75,
        container.clientWidth / container.clientHeight,
        0.1,
        1000
    );

    const renderer = new THREE.WebGLRenderer({ antialias: true });
    renderer.setSize(container.clientWidth, container.clientHeight);
    container.appendChild(renderer.domElement);

    const light = new THREE.HemisphereLight(0xffffff, 0x444444, 1.0);
    light.position.set(0, 20, 10);
    scene.add(light);

    const loader = new THREE.GLTFLoader();

    const dataUrl = "data:application/octet-stream;base64," + base64;

    loader.load(dataUrl, function (gltf) {
        const model = gltf.scene;
        model.scale.set(1, 1, 1);
        model.position.set(0, 0, 0);
        scene.add(model);

        camera.position.z = 15;

        function animate() {
            requestAnimationFrame(animate);
            model.rotation.y += 0.005;
            renderer.render(scene, camera);
        }

        animate();
    }, undefined, function (error) {
        console.error("Błąd ładowania modelu GLB:", error);
    });
</script>
